#!/usr/bin/env python3
import os
import gzip
import random
import json
import argparse
import logging
from pathlib import Path
import typing as T
from functools import lru_cache

log = logging.getLogger(__name__)
log.addHandler(logging.NullHandler())

memoize = lru_cache(None)

def make_dir(path: str) -> None:
    Path(path).mkdir(exist_ok=True)

@memoize
def get_words() -> T.List[str]:
    return gzip.decompress(WORDS).decode().splitlines()

def file_content(word: str, words: T.List[str]) -> str:
    all_words = [word] + words * 5
    random.shuffle(all_words)
    return '\n'.join(all_words)

def part1_path(info):
    path = Path(info['root'], 'part1')
    path.mkdir(exist_ok=True)
    return path

def part2_path(info):
    path = Path(info['root'], 'part2')
    path.mkdir(exist_ok=True)
    return path

def powerlaw_sequence(population):
    '''given population P, create occurance behavior of elements that
    follow powerlaw distribution

    '''
    N = len(population)
    shuffled = random.sample(population, len(population))
    degree = [1] + [0] * (N - 1)
    
    for i, value in enumerate(shuffled[1:], 1):
        n = random.choices(
            range(N), weights=degree,
        )[0]
        degree[i] += 1
        degree[n] += 1

    new = []
    for i, (d, v) in enumerate(zip(degree, shuffled)):
        new.extend([v] * d)
    random.shuffle(new)
    return new

def random_numbers(N: int, M: int, max_value: int = 100000):
    '''create NxM random numbers following powerlaw distribution from range
    of max_value

    '''
    def sample():
        return random.sample(range(max_value), N)
    numbers = tuple(zip(*[sample() for j in range(M)]))
    return powerlaw_sequence(numbers)[:N]

def random_words():
    '''create random words following powerlaw distribution

    '''
    words = get_words()
    return powerlaw_sequence(words)

def create_part2_files(info):
    Path(part2_path(info), 'shuffled-words.txt').write_text(
        '\n'.join(random_words())
    )

    Path(part2_path(info), 'rand-words.txt').write_text(
        '\n'.join(random_words())
    )

    def to_text(numbers):
        return '\n'.join(''.join(f'{n:<8}' for n in row) for row in numbers)
    
    Path(part2_path(info), 'rand-numbers.txt').write_text(
        to_text(random_numbers(1000, 1))
    )

    Path(part2_path(info), 'rand-numbers-2.txt').write_text(
        to_text(random_numbers(1000, 2))
    )

    Path(part2_path(info), 'rand-numbers-5.txt').write_text(
        to_text(random_numbers(1000, 5))
    )


def create_part1_files(root:str, ndirs:int=10, nfiles:int=200) -> dict:
    info = {'ndirs': ndirs}

    info['root'] = root

    words = get_words()

    random.shuffle(words)

    directory_words, words = words[:ndirs], words[ndirs:]

    info['dirs'] = sorted(directory_words)

    file_words = directory_words * (nfiles // ndirs)

    info['file_words'] = {}
    for i in range(nfiles):
        name = f'file{i:05d}'
        word = file_words[i % ndirs]
        info['file_words'].setdefault(word, []).append(name)
        Path(part1_path(info), name).write_text(file_content(word, words))

    return info

README_BP = '''
Your lab directory is: {root}

Inside your lab directory, you must create these directories:

{dirs}

For example:

$ cd {root}
$ mkdir {word}

These directories are random words chosen based on your username.

Each file in your lab directory (e.g. {file}) contains a list of
random words, but each one contains one instance of each of the random
words you used to create your directories.

Each file must be placed in the directory whose name is contained in
the file.

E.g. if the word "{word}" is in the file "{file}", then you must move
that file "{file}" into the directory "{word}".

$ cd {root}
$ mv {file} {word}

'''

def create_readme(info: dict) -> None:
    readme = README_BP.format(
        root=info['root'],
        dirs='\n'.join(' {}'.format(w) for w in info['dirs']),
        file=info['file_words'][info['dirs'][0]][0],
        word=info['dirs'][0],
    )
    Path(part1_path(info), 'README.txt').write_text(readme)

def write_info(info: dict) -> None:
    Path(info['root'], '.info').write_text(
        json.dumps(info, indent=1, sort_keys=True)
    )

def get_args():
    parser = argparse.ArgumentParser()

    parser.add_argument('studentid')
    parser.add_argument('-r', '--root', default='.', type=os.path.abspath)
    parser.add_argument('--loglevel', default='info', type=lambda s: s.upper())

    args = parser.parse_args()
    return args
    
def main() -> None:
    args = get_args()
    logging.basicConfig(level=logging.getLevelName(args.loglevel))
    
    random.seed(args.studentid)

    make_dir(args.root)

    info = create_part1_files(args.root)
    create_readme(info)

    create_part2_files(info)

    
WORDS = b'\x1f\x8b\x08\x00\x0f\xac\xa7V\x02\xffU\x9a\xd9\x82\xf3\xac\xaeD\xef\xfd\x96\xd8&6\x1d\x0c\xfe\x19\x92v\x9e\xfe\xac\x12N\x7f\xfb\\t\x10\x1e\x18\x84T*\xc9\xed\xe69\xb7\xe5\x9a\xdc\xbc\xe6#\xa4\\\x97|Z\xaf/-\xa4\r\xc9/~u%\xf4cr\xcb\x12V\x9fZp1\xb4K\xdd^\\\xf3\x08\xbb+\xfa\xcdOuJN\x81+\xd1\xc4\x9a\x0f_\x91.\xdf\xc22\xb9\xd5\xb5P\xd5\xf4\xd4h\x98%\xcc\xd1\x0f\xa9\xe9\x06k\x08\xb51\xacM\xbe\x16\x9f\\\\r\xe1e\r\xb8\xbe\xf2\xe5\x99\xca\x97\xbc_k\xc9\x9dW\x1e\xd1\xb5\xfc\x1b\xd2\xe4\xb6\xc3\xd1\x0fk\xf4U\xed\xe1\x0b\ro\xef9^6{\xf4s\xaf\xbb\xda\x97\x9e\x8f<\x92\x1aSeu\xa2\xe4\xb4f\x89ye{1WV\x16\xfb\x91\x1c\xedq\xeea\xc9>\xda\x9c\xea\xe4_\x93^\xdaOr[q\xc7\xa1\xcd\x1d\xea\xd9|\xa6\xa3\xe4\xce\xe8jpHK\xf0IMf\x03)\xe5\xcbv\x98\xf2\xc1:\xce\xbc"6\x14\xfd\xd6#mg\x83\x9f\x1c\xec\xe2^\xdc\x12\xd2W\xe2\x84lB\x1d\xc2\xdc\x8f\xf1HX\x8a\xb7m\x8c\xe9\xd5\xbfN\xdb1\xf2\xea\x8f\xbc\xa0P\xebD\xdf8\xab\xed\xbeu\xba\xa2}\xc7\xac\xd5\xdb\x15\xc6\x89\xe8\xff\x96u<Z\xe4\xe9j\xd69\x9f\xae\xedz\xf5\x0c\xe7\x9egm\xea\xaca\rY\'\xf8_g\xaf]g\x88T\xfc\xa6\xbbH-\xbc|\xb2\xf3(\xcb\x1e\x8e\xb3 \xdbB\x9b]9K\xf0\xb5\xedY\xfb/\x9bKzn\xbbbT\x1b\xfd\x7f=$\xb72x9\xb0@\x97$\xd8\x82\xear\xb1\x02\xe9\xbf\xeeo\xac\x83\xb6\x86-\x8d{\xb5\xbb\xcd3^m\x01\x8bh\x18`+\x97\xbaE\xa6\xd3J\xe6\xd5\xd53\xe4\xe4z\xf1\x8c\x12\xb9\xdb\x1bFR\xcd\x9a\x11u\x92\xec\xf3\xe5\x0bC\xe9\xf6o\xb0k\x1f\xd32\xd3\xfe\xe6\xe4\x0fY\xe4\xa7\x97\xc0K\xb3[\x9es\xc1|\x90\x1e\x8f\xc8Bxkv{\x7f\x95\xb0s`\xb3\x8b+\xda\xf3&=\x83\xdd\x8c9\xf3[\xdc<;].%\xbf\xa5\x96\xd9\xbd\x8b\x8f\x13~\xb7\xc8\xe1\x9c$\xce\xec\xa8\x12\xd0&O\xf85\xe0\x11\x1a\xcco\x9b\x94\x93\x90"\xb3\xb3A\x04[\x90?CZ\xf6i\xdeu&s\xc0\x85\xf5\xbb:\xb9\xdb\xcc\xc9/\xcfi\x8e\xfc&?K\xa8\xe7\xee\x0f\xeeD\x0cI\xbf\xbc\xab\xf1\xd9\xc9\xba\xd8\x15\xf9\xe54\xe7y\x96\x92\xe7\x1c\xd7\x87\x03\x18$\xd5\xe6\x0b\x87\xf0\x94\xdc\xe4\xbb\xa0\xc0\x9c\xd3\x8as\xd1\xe6g\xdd\xf3\xa9W\xcb\xea\xf1,I\xadcdG\x97x\xb9\x02\xf0L\xe8nyz\xad\xb4p\x80:\x86\x19S|\xe6\xc7C\xc2+\x00$\xad\xdc\x97\xdf\x9c\tm\x881\xc8L\x93: O\x92R\xfb\xf2tWA\xaf=h\x83=\xc6\xb5K\xa7\x08u\x0f\xcdP\x85N\x11\x0c\xe0>\x18\xaaW\x8b\xd2\xf4N\xd9\xba\r*1\t=\x04\x17>\xdeR\x8f\x0f\x19\xe8|\xed:\xe7\xc5\xb17\xa0\x06\xe1\x11>\xfc\xc6k\x91\x8f\xb2\xab\x05|\xe0==\x93\x18F\x07\xa5[\x1cx?o9\x83\x11\x08\x1cCh\xb7M\xd1\xe3\xe0b\xd4.\x91s\xb7\x13@\xf9\xbc7\x84G\xd8\xf66-\xe0\x14n\x1b>\xda\xcb\x82\x856\xdc\x1bh\x02\n\xe8\xf5\xe8\x01\x8b\x05/\x03f\xb0\x9b\x00\x86\t\x8c\x170\x8eVS\xb0\x1bI\xd1\x05A\x92ul\xdet!\x02\x16B\x1f\x1e\xb4;!\x865o&%\x1b)\xa4\xf6QS\x84\x19\'v\xa9\x97\xc2K\x8ad\xfe=f\xb9\xd7\xc5\xdepO~\n\xe7\xcc\xfe\xb4%\xc9\xcdk\x15\x1c\x12:\x9d\xc0\x16\x8fWr\x8b\x1b\x18\x93\xfc\x19u0\xa6\x9b\x96HH`\x83\\\x11\x0cs\xb4\xb4,\xac\xcevt\xd6\xf9\xde\xee\xdaPdPSH\xec\xe9I?\x0b\x07\x14z\x96\x8c\xa75\xc0Y\x86\xb2\xe4\xe5y\x98\x82\xb3W@\xa1I\xc4\x8f\xc3.\xfc\xb2\xba\xfa\x85\xab%\xc7x)\xeaI<\xce\xac\xdd\xe5\xb4x\xb6rK\xf7)\x8c\xf0\xa1+\xd8\x17\xa0!)\xa44&I\x8f\xf0;\x9e\x7f\x14\x19\xc2\x90\xf2\x1dt\x84\xd6\\\x10\x82\x02I\xc5\xee6\xb7)\xd4J*\x19\xfcia\x0e\x16mu\x85\r\xc5\x80\x9a\xee\x15&\xeeo\xfe\x96\xae\\\xc2g\xcc\xf5\xeaQ\x18k\xfb\xcb\xd1\x01C\x08\'*\xd3\xa3Bz~K\xd8\x88\xbc\x1a\xb6`\xb7/w\xab\xa7\xc7\x1c\xa4\xceL|\xf6E\xa0$g\xbb\xbb\xe1\xb8\x8dU\x17\x00;\x1b\xaf\x97f\x13\xb1\x02\xfd\x8ea\xde\xc3\xfc\xf3\xb0\xd1r\xa3\xf4\xce\x13\x05\x8e\x01\x96h\xd5\xf84`\xb6\\\x89@ \xc8]\xb8\xbf\xe2\xf3\r8\x04\xae\xa4hx\xc2l\xcd{\xd5\xbd\xb7\xf9\xef\xea.\xec\xa5\xe8\xa1\x0bG\x9aV\xaf\x88\xbdH\xe3+\xa7\n\xec\x83{\xab\x82\x97W|G\x8c\xc1~\x16\x93;\x9e\xc1`\x18z\x1aD\xc3\xa2\x11\xa3\xf9\x146y\x93F\xf6\xb8\x87\x85\x93\x15U;\xfd\xe2\xfd@}\x1d\xfb_\xbd\xce\xa2b\x04\x0b\x93\x06\x96n\xa4\x87u\\\xea\xc6\xe7\x15\x87F\xe9h\x92\x88 \x02$lY\x03\x01\xa2\xdb\xc2\x82H\x8c\x9cc\r\x91\xa8Sh+\x98\x9f\x8f#\xaf\xf7D\\H9\xd8\xc3U\xa7\x91\xb6{S8\xf6\xe9\x8c\x8d\xac\xf21,Q\xc3TB\xa6`\x14\xa9r\xaa\x9b]\x93\xd6:\x02\x16\x85\x83k\ty\xdb@\xae\x95\xe3\xd6\xfa9\xbb\xe6B|\x0b+\xd6\xfcN\xb0\x07\xdb:g\x95\xf4\xfb\xb2\xa0!\x81\xa0rJ\xc29\xcc\x06\x91\xd2\x96\xd5t\xfc\x11\x9f^;\xa15\xc9k\xd67\x98\xc2\xd9\xe1\xe2D3\x82\x19\xac\x0c\xa6\x90\xb7k"TU\x85eP\x0b\xd9/\xack7\x8a\xd7c#"\x7f\xaf\x1dnK(\xed\xf3wA\xc0t\x84\xa5\xfe\xbf>\x81\xc1\x825\xe1\xb82\x80\xac\xc0\xe3\xaf\x1c\xb1\x87\xccm\xf2f\x02\x97O\xa0\x83\x88!R\x14\x8c\xfa$5\xaaK\xe4\xe1\x15\x02\tQ\t\xe1\xc4\x1d\xd7\x0bb\xa5g\xcf\x10\x85~\x10\x91Ay=A:M\x06\xae\x98?BC\xff(\x0fm\xf9\xae\x00Zl\xb9\xfddP[\xd4/\x80\x96\x81T\xce\x16\x19\xa4\x92F~wGPB\x9b\x88Z\xe1\xa5\xb6,\x82\x03\xff\x8b\x9f\x9a\x11\xea\xe2\xc9\xe6lKL\xf2[\xdc\x1a4\x1b0U\x92\x9d\xb7\x86jb\x87/Muy\xc2\xe0\xbbN\x0f\x87\xf7?\xec\x04\x1f@\xe9\nS)/\xd9\t\xbd\xa11T\xfcp/\xb9\xb0\xce\xf5!\xcf\xe0\x05\t\xccU\xc2\xaf\xa4\x0e\xfb\xa0\x15%\x06\xcd\x1f^\xe4L\x96\x8a\x84\xc5\x12\x0c\x90\xaa\xbcOM\x15\xb8?\xd0\xe6#\xb0\x86\x1a\x8c\x9b<`\x1b\xd1co+b\x14%2\x93y \xa0&\xad\x0e\x86Y\x89smH-\x9f\x12\x0e\\\x08H>\x7f\xc4P\x10\xde\xc6\xe6\x1fQ*\xa2\xe9\xcd\x02\xd8\x03`\xd3\xd0\xe8\xe0\x01\xb1\xd0F\xc6\xe8l\xae\xda\x0c&\xbe\xddx\x1a\xc7}Z\xf3\xf9D\x99\xe9\xa3/w\xc0y\xe0\x02\x81G\x0f$\x91\xcce\xda\xdc\xb6\xe9\xa5\x8d\x98\xc1\xf0\x9b\x1c\x98lC,\x07\xd8$p\x02S\x9b\xfb@l\xa6\x8d\xed\xd1aj\x85\x02\x8e\x0fQA\x8e\x08\xbc\x85\r\xa8\x9e\xb6\xe8\xfa\x92W\xb1g\xc4\x0fSo\xd0\xbe\xa3\xed\xb4\xdc\x80=\xe3\x1e\xc8\xe2\x0e\xd3\x96G\xea\xb2\x91f\xf0\x13\xc1\x0c\x1a\xe2\x03\xf6\xa5\xa0\x80\x9cE\xd5\x1aR\x81\xb2\xa0)\x04\xaez\xdc\xde\xdf\xb2\xd9\xc5\x96\xfbO\xd6\x80]\xe4p\r6qq\x9f`-9\x15C\x17\x08\xd1I/gK\x946\xf9\xb0Nx\xeb>*\xd7\x99\x8c\x0c\xdd\xd1\x07\x06\x81\x08y\x13\x13e\x12\x10m\x07\x86\xbd5o8\x1cw<\xf6\xc5\x93^\x01?\x89u3\x99\xf5\xb2R \xb9\x83\xd8\x05\xfb\x87B\xf6b\xddS\xae\xeb\x86\x909l\xa5e\x98(\xfcVA\x05\t\xb2\x01\x07!(a/\xa4\\\x18s\xa3=O(\x0f\xcei\xe7\x06\x17Q~DB\xb2e\xd1T\xa4(,g+&\xb1\x08\x16s\xb3\x1a\xd6\x07CQ\x92\x8b\x85\xee\n\x83\x95@\xa9As\x17\x17W[\xc9\x12\xc3\xfd"\x1d;\x12h]\xc3W\xf6\x0b\xc8=\xa5\x12-_\x19\xe8\xef\x05b\xf1\xdauz\x88,\x9e\xb4+\xd9\x1a\n2\x9b\xb9\x179\xec\xc7\xd8\x9c?\xeb\xf5\xbdp\xe8\xd1e\xc2\x01\x17\x81%4.\t\xd0\xea4\x12\xed\x07\xdai#\x94\xdf\x17\xcc\xaf-\xc5%v\xa2\x19\x12\xad\x16,5\xf1S\xc0`\xc9\xa5\xd6!\x0b<\x94mM\xe4P}\xb3L]\xb2x\x04\xfa\x97\xed\x83\x88d\x14\xa7\x14#*@\x17W\'j\x01T\xf5\xcf\xa3B\xc2\xe5\xb3r\x1b\xa2*\x1d\x80\xba\x1b\xbb\tI\'EC\xc8A\xedc@\xfb\x93q\xa2\xd2 \xce\x00\xb9L\x9bML\x07\x1c0\x16\xbf\x8en\xfcG(F\x9fS)\xf7\xa3\xb6\xbd\xf4\xcd,\x82\xc8\xd6\x03\xf5\xde^k}\x12\x08\x01~\xb1\xa5\xd3G\xadp0\xd1:u\xb3\xe2\xff$K\xd3\xe8/\x85\x96{*\x14\x94\xc6"8\xc9)`\x02\xbb2\xa8P\xca\xadkyr\x00\xd3B\x06\xcf4\x03\xbd,\x8e\xf1\x8b\x07\x11\xd4\xe9Y\xc0\x9f\xb4z\x8c\xde`\xe3\x072\x8f\xc2<\xc2\xb5y5\x9f\x0f\xfb\xfeQ4\xfe\xc93\x7f\xe4(\xa2\x80?\xf9"\xc9zLO\'\x83\xdb\xc8\x80\xa6\'\x1e\x87\xb9\x91\xc3Xv\xff4R/\xa7\xc7>\xe8]\xe8`\x9d\x9e\xf2\xc1\x07\xb9\xd8\x13n\x85\x85<\xb15\xfc\xef\t\xcc\nn\x9f$Zn\xbb>\x08%\xd5\xa7?\xcf\xce\x88x\xf7\xf4\xec\xf5)oP\xb6\xe7V2\x02\xe9HNm\x1c\xc5\xe9F\x02)\xd5O\xe6w\xec\xf8e\r\xf6&\x9d\xeb]a\xed@\x0c-\x9e\x05\x11\xe2\xa3\x7f4q\xd4\xc9\xea)\xea\xbf\x08\xefV\x95\xc1\x11\x9e\x95d\x03\xe11<\x88\xc3>e\xbb\x98\x8a\x85\x1d\x91@\x14W\xefk[\'\x8e}\xa9\xad\n"\xa7\xb7\x08\xcaB\x954\x084\xf8a\x03P\x1a\xda\x1e5I\xee\xebx>\xbfG\xf6\x8b\xa8\x92\x85\xa3\xf9\x05b\xfe\xc6\xbb&\xd1K\xbc+\x0e\x1b8T\x9a\xb2\x04\x86)\x0e,+\xf3\xfb\x04\xde R\xb3\xdf\xc1!\x82\r2\x11\x81l\xe3Pi\'\xaa\xa21$q\x18,&\x05yF\xd7K\x85\x05Wg\xd2\xc0\x06\xbd\xe8qO\xcb\xbfpOlDS\x88\xdeh1\x00\x9c\xec\xf4\xf0\x9e\xb3\xa6!\xc8\x08\x92\x90\x82Y\xc0\xa1L\xf9m\xb7\x12&_t\xa5\xa8\xa8\x01\xe9$\xac-\xb0O\x13\x95\xb5\xcb\xf8$\x03p63t\xe4\xb8\xd7\xe5E\x93\x81B\xbb\xea\xb3\rC\x80\x7f(\x0c@\xa4\x80\x9f\\\xc8<\xd8\xd0X\x8e.a\x88P9\x8e\xfc\xc0\xabI\xebH\xfbx\rw\xb0\x14\xd1\x9b\x08\x9c\x8b\xc8 *\x0bR\xc5\x00\xf1\xc1\xa9\xd8i"\x03\xf8\x97\xbd\x05h6e\xaf\xc4\x8c\xbc\xa8\x86\xb0\xfc\x89V\x97\xb9\xfb\xc2u- \xa7\x1b\x11\xed\x8d6\xb0\x93E\xfe[\xa2\xd0\x9bl\t\xa1\t\xcf\x0e\x82h9\xaeehM\\i`\x1eb\xd3\xea\x8c\xeb\x03\x14:\xfa1\x84\xd4\xdf\x9b\x99 -\xd7\xa5\xa8\x0b\x86\xc6\xb4\x92\xb0\x9aq\x16\x893\xd9\xa7\xe4\xa5\x13\xe5\xc1\x16\xc1\x92\x87<\xce\xb9\xa8bU\xe9\xc9\xa0\x98!y{\xe4@\xe8%\x13\x998\x8c\xa8\x18\x80cUB(\x02\xf8\xcd\x8fx\xf7J\x9b`\x00\nQF\x84\x92\x98\xb9\x8a\x91S\xca\x9b\x11\xa6\x04\x0c\xcd5\xc3v\xeei3\xd6\xfd\xad\x9dY\x8fS\x80M~\xb3U\xae\xf8\x07\xc1"\x90\x90\\\xd6K\xaa\x99\x18\xc7\xd5*\xd8\x9c\x90\xfb\xf8W\x8eK\xa6\xf52\xaa_tNg\x91E\xd2\xee\x95\xa2\xd9\xa4\x9a\xb2\x1f\xa7\xde\x1a\x8fa\xbe"\xf4C<;\xf1V\xc4\x85^\xe3\xc6(\x0f\x9a\x8a\x13\x04\xcb&\x1fx\x9d\xf1\x10T|\\S\x9e\x7f0\xdf\x7f\x91mR\xcc\xc6\xa7\xad\xd1\n\x86`\xbb\xces\x85\xba\xca\xfa\xf3\xdc\xc8\xfb\xc7*H00\xaa)k\x95\xb7U\xe4\xc7c\xa4\xee\xba\x1d\x9e\x83oL\xf9\x98\xc7\xd1M\xe8\xebv\xb0<\xbc~\xe2z\x03OG\xf6ps\x15\x02{bE~`J>\x01\xee\\\xeeE\x16\x15cF\x05\n,\x16\x84\r^\x94\x8d\x17\x7f\xcb\x82\xb9DoY\x14\x10\x8c\t|\xedfR\xee\xfbo\xb1u\x11\xa3\xd1zne!s\x18\xbcU-\xbbaM\xde\n\x94\xa69\x14;\xac\x1bz\xa6\xec\xad\r\xa9\xa3\x98UR\x04\x81\xb9d\xa5\xca\xcd,d\xa8\xc1.(@\xe91u\x84\xa3\x7f\xc7\xaf+\x8b\x88\xbce\x1d\xd6\xeb\xa5\x98\xf5\xa8\xb3\x06\xa9\xfd\x7f\x0e\x89\xae?Fv%\xf9\x11,\xc1\x97\x08\xadM\xcb-\x1f*\xe9\x9at\xea\xf9\xd3\xd2\x18\xeb\x82\x07&\xd4\xe8\xbd\x85\x81\xfc\xb2\xdc\xcc\x8e\xf9\x95\xcf\xeb\xe6I\xf9\x97\x8c\xf9\xa3\x822\xcc\n\x16\xf1q\x101\x88\x96\xf5\x9b\x98\xeet:\x022\xa9\xaf\xca\xea,\x07\x89\xe33A\xc5\x93\xd2U"I\xa3\x97\x94\x9f\x9f\x8a\x9b\x0b\x17\xcaj5\xbdS\xa0\xd6\xc4\xd8Q\xd3\xa9\xf0-,\x90\x10t\x93\xbcy\xf5C\xd0:\xadU\xd1\xa6\x13\xccN\xe5\xad%\x8e\xeb]\x87\x89\xdb\xfc1%\x8bX)\xdcT\xe9$H\x03\x8e\n\xcd\xa7\x0f\xd5\x1ay<+*\x12cx2\xabW\xa2\xa8fw\x1f\x16(I\xcfh\x03\xe2G\xcd^+DJ5\x1c\x88\x9d\x80\xc4\xee\x0c\xdaN\xb6\x0e\x86\x8d\xcf%\xda\xa9}s\xd1Fv\xfc\x8d\xbc\xc2"\xdc\xe8\xc8\xf09(\xebh\x9e\xac\xc2\xc1\xe8\xd6K\xdf\x1cl\x91\xfb\xc5\x18m$\xb2gpx\x16\xcb\xc5\x0e\xaeNj\xb3KeaQ\x18\x93&\xc3(u#l\xc9\\\xe5\xa5wX\xad\xf2sy\xfb\t\x08\xc9\x19\x8f\xb1\xa6\xd0\xaa`P\xd6p\x97\xf3\x90\xa5\x95nWu,\x03\x90\xce\xd8\x8f\x7f\xd6wf\xf2#\x08\x97\xe2\x89u\x1e\x19\xa7\x96@21\xaedqj\t\xa7>\xddHh2B\xe2\xd5\x99sy\x0b\x81\xa1\x14\x18\xf0\xa2\xbb\xe5\xe9\x9b5\xb2c\t\r\xce~\xd9L\x8akb\xcev,\x84\xb6\x04G\x95\x96\x08\xba8\x88J\x14\xddz\xf6\xb5\xcc(5\x1d\xab>\x99"\x00E\xe5\xad\xa7R\xcfb5\x82\xf1\x85C\xa3\x16\xe3\xb3\xaav\x9f\x96\tp\x18\xaa\x0c\x9dFU\xc3\x9f\x15Y\xf7\xcfQ\xe9zp\xecRyI\x9d\x87\x15\x1f\x8c\x88\xa9\x07V\xba1xN=-a\xd82J\xd7G\x11Z\xf2\xebrg\x8f\xea\x19\xd8]\xe0\xdd}<\xdf\xb2\xba\xcd3\x08\xc4p\x8b"\x83\xf1\xf7\x9cm\xf0\x84\xd1y\xc1~\x8b>`\x9c\xd5\xf7\x95H.\x022^\xb2\x0b\xfe/\x06\x8c>\x19\x8a6i\xf2\x9d\xed\x8c\x8e\xf9\xe1\xb2_\x84=\x0e\x06\xdb0\x8b\xbb\x16\x9b\xf4*\n\xa070\x0b\x1dd\xf6P\xcb\xb0N\xfa\xa8$\xeb#\xe5U\xe2\xe7%T\xd9\x89h\xa6\xe9\x8c\x84\xa4\xd8q T\xcbN\x84\xa4\xff\xf5\\T\x98\xd2\x07\x17\x8e_M\xb0\x12\xac\n+YuC\xa6*\xeegv\x84\x12\x04\x12(t\xa9o:\xf9\xb0a\x8b\x03Y\xcd\xde\xb1\x8b\xc5\xea\x84\xc5J\x8f\xcd\x04U\x03\x95\xa3!/\xee\x94\x8b\xac\x12U\\W\xab\x82\xae\x8cJ\xc9m\xb5\x82\xea\x18I\x95\xba\x1c_zf\xe5X\x8b\r\xf6\x80f$\xb5`\xf8\x1f\xbe\x14\xbf\x11\x97!\x0e\xc5\x9b%\x95~j\xb8\xf0\xb2\x89\xa2\xd37PC\xe9\x16\xce\xf8\xf5\x1dt\x9c\x956Jx\xe5\xa0Q\xb2\xbe\xdb\xd2\xf2lX4o\xf5\xb6\xae\xdag\xf21=\xd12\xaca,\xcf\x16=B\x8a::\xb1cl\xf2\xe5J\x1aa\x00c\xd7\xf7\x97\xa9\xec\xf6\xd5\x91\xe3.p\xe5\x12\xe6oJ_\xc4\x87&\xd5\x0f\xc5~h\xfb\xcd\xc3IO\xaa\xe7*\xe3\x8dj^\xc7y\x8a\xa8\x9d\x86\x9eJ\x9f\x95\x9d\xe9\\\xfa(\xcap\x82s\xb7\xd3\x9eT)\xd5\xb7\x02\xc2mu\xcf\x1e\xc9\xa3\xaaV\xed\xee\xbb\xca&\x15\x17*pL\x8a\x9c\xd3\x85\xd8z\xb9cuu(\x8a\x91\xeb\xa2\xc8\xa8\xc3\xaa\xcb\xa8V`\xa5\xa0\x04g$\xfe\x00^Ap\xeaR\xbc\xb7z\xb0h\xd7#\xd8yTP\x99\xbf9\xcb\x00\xd0\xa12\xc5\xfb\xc6\x11\xdc?\x17\xb6n\x14.\x0e1\xe9\x8b\xa7E>u\x87a\x90\x0f\x8ce{}\x93\x15\xbd\xaf\x1e\xbb\x8eB\x90\xea\xcb_i\xb4\xee\xee\xf4\xd0\x04\xac\x00Q\x0b?\xcd\xffQ\xd2\xecU\x87\x92\xe4\xdbc\\\xea\xcb\xce\xf4\xbb\xbe\xc1Y\xd3\xb2>\x06"\xbd\xd9\xa3aH\xddK\xe0\xa7\xa7\x93p\xc4;\xfa\x88\xaabe5D\xd7\xff\x03 \x1e\xa7X<\xaek\xeeR\xf5\xf17\xdd\xc4\xae\xeac\xbd\xbc\x8a\x8c\xf3m\xfay\x86\x93\xe0\x82\xfe\xa2\xb3\x11\xc9`\xf9Se\xa8*\xab\xd1\xff\x03 \xb1\x96}(\'\xf1\xd8(\x0b\x9b\xa8\xccR\x926H y\xde\xaaN9\x7f\x84\xa3H\xc6S+\x195Yx\xb8A\n\x0fr\xf6\xb3\xf8G\x8f\x92\xc2:\xaa\x90\x9a\xcf(Y=\x9dEn.\x11\xa8\xc5\xcd\xad}\x8c\xef\xf4U\xb1L\xcbU\xdd\x7f\xd9\xc7\x11\xe9\xb3=\x17B\x1b\x8b:3@\n\xed\x00t5\xb0\xb0T\xf0\xca\xd0\rRs\x9b\x87}b\xb7\x94\x07\x11\x8cQy\x13\xa9\xd9\xc7\xbc\xda\xfa\xb2\xd8\x7f0\x10\xbf\tyx\x9c?3d\x01aSm;\x19p\xca\x11\x87\x17\xdb#\x83p\xde\xdf)t\xe1\xfb\xd9^2i\xec\x08=\xc8\x18\x8f\xdd\xaf\xfa?\x06\xd8\xc4\xf7\xe3\x14\x97\x9a\xd5\xb5\xb5QPSN\xd19$H\xcd"&\xae}\xab\xbf\x93\xdb\x0c\xa9Y\t]:\xb2\x1e \xf8\x87nve\x04\x81q_\x99\xaf\x04\xf2SK\xf4\x91\x94\x18j\x8fE\xab\xb3o\x8c\xb5\xa3\xed\xa4rm}\xbb\x90\x0e\x15D\xeb\x1bK\xc5\xbd\xc7\t\xbf\xc3C\x89~}\xcb\xf6\xaf\xaa\xd2bU\x8d\xccj[\xda i\xadK\xf9\x8d\xd1Y\x82\xcbo\x1aiBs\xd0\x0cyWs\xbfo\xf7;5\xd0\x19\xb8\xd1\x1e\xb0vv\xee\xec\xd7\x03\x82r\xf4Y\xc9\x97j\x04\xa3\x8e>\x91\x07\xa0\xdd<\x87\xc1\xd0\xe9\xe3\x95U\r\xc6\xf5\xc7\xdaG\xe5\x1c\xcb\xaf\xfaT7}\x0b\xe9\x9b\x90\xcc\xfaA\xb5!Z\xfd\xd3H\xc3\xabfE\xe2\xb6\xf7\x1f\x91\x90\xb6_\xc0P\xb7\xac\\\x16r8\xe5\xfdH\x83|\xb6\xacR\xf9J\xcb1\xf9\x05}\x81B\xc4\xe7fyGQ\x9b\xf5\x03\xa7\xcc\xba\xf7V\xa65q,\xa3\x96b\n\xb4\x9e}\x9e\xd1q)\xea\xe9E\x9d\x9c3h\xf1w\xb7\x8d\xf6\xd4\x1b\xcaC\xbc\t*\x15D+|\xd1\x91UK\x11\xf6\xc1\xd6\x9a\x0b\xb3\xb7\x85*\x10\xb3oY\x95\xfd#E\xb0\xd7I\x11\x89\xa8\xb4\xfa\xaf\x01ePS\xc3\xb2I)T\x8e\xfd\x8ay\xfc\x97\x0e.`\x1f\xfa\xc18\xfb_\x8e\x06E\x95\x0e\x81g\x86\xa9SOX\xae\x95\'\x91@\xd0\xcd\xdb\xcc=\xcd\xae\xd8\x17^$\xbf\xfaE\xe0\x82\xa8\x7fPx\xe4h\xb2\xfec\xe0O\x1f\xac\xc5\xa1\xb0f\x8f->\xc4!\xa0\x95\'.&i\x10\xd0n\x15QQ\xcf\xf5\xfb\x9e>\xa7\xa6\xbb\xec\xda\xe5I\xc9\xde\xfd\xfbd8\xdb\x00\xab\xb8\xfb\xf8\x87\xa8\xd1\xb3\x04\xc6$\x00B\tOW\x9a~v+q\xda~\xd6\xfe]\xdb\xf8\x82e\xb5z:\xdc(\xdf\x8cR\xdd\x9f|\xdd\x93X\xa6\xd28\xd9\xef\xe7\x93\xae\xf2\xec\xc8\xf2\x86\x8c\x0f\x87\x81\x00\xea\x9e$\x96\xdf\xb8\xd3\x93\xbe\xf2\x94[}\x0f"\xd8\xe7+\xf3\xa8\xa8\x0b"\xc6,\xcd\'\xfd/\x80>c\x0c}\x85T\x8d\xbf \x89f\xd1>S\xbeUn\xc5\xab\xbb\x88GO\x99\xaa(\x8eD\x15\xcd\xc73f\t\x92F\x82\\\xef\xa7O\xef\xbf\xeb\x81"\xfft\x95\xc1\xc6\x8c\xa7\x11\x8a\xb0|\xb72h\xb3%I\x1d\x13f\x1f\xa6\x0f\xc2lQU\xeb\xfa\xde\x01l\xe3xC\xe9\xda=\xb6\x05\x1cks\xd7\x9a\xee\x07T\xcd\xd7\\w\xd5\xcc\xf6\x8f\x85\x9b\xd1\x01\xcd3H\x9bn\xcd\x01\x99\xaaS|g\x01\xe5\xc6\xc0\x7f\x88\xe4W[\x0f\x86\xe3\xec\xfc\xcd\xfdh\t\x82\xabMw.1\x1c\xfax\xdd\xcfU1\xef%c\xb9\xc9\tr\xef\x04\xc6\x97;\xed\xab=\xc4\xe6%:\xa2\x17_\xde<Wg\x98\x84\xac\xfa\xdf\x8aK\xdd\x91\xc0I$\x11<\x81G\xfb\xef\x80\xc5\xfe\rf\x04\xe3\x97rO(\xd1)1\xda?\x82\x00\xd4nT<^\xe152*?\xbdq\x13\xc2\xbe}\x1ck\xfa\x18\x8a&\xde\xca\xcb\x15`\xdf\xfe\xc1\x0f4C.\xfd\x86LDe,\xef\x1dK\xf6w5\xe4\x1d\xda\x1d6$e^\xcey\xd5\xbfV\x88\xc1\xab^o\xa8V\'\xfb\xe6\xcf\x9b\xa8\xee\xad\x0f|v:\xef\xfe\xd1\xd7\xa8_\xfd\xaf\x0cP1\xfdB\\\x96J\x93\xc4\xca.\xb1\xad\xcb7=rA*\xed\x9f5\x94\xfcL\x17q\xe1C\xf2\xf0a3J\xe0\x95\n|\xf0\x9c\xe9\x93GzrM\x9f\x8bT\xe3\xff\x00F>3\xd9\xd1(\x00\x00'

if __name__=='__main__':
    main()
